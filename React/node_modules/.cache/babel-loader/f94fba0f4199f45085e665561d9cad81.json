{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Test.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableFooter, TableHeader, TableRow, Text } from 'grommet';\nimport { BOOKINFO } from './Query';\nimport { useQuery } from '@apollo/client';\nimport { Button } from 'grommet';\nconst COLUMNS = [{\n  property: 'id',\n  label: 'ID'\n}, {\n  property: 'title',\n  label: 'Title',\n  dataScope: 'row',\n  format: datum => /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 22\n    }\n  }, datum.title)\n}, {\n  property: 'author',\n  label: 'Author'\n}];\n\nfunction Table_test() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BOOKINFO);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    margin: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    key: c.property,\n    scope: \"col\",\n    border: \"bottom\",\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, c.label))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, data.bookinfos.map(datum => /*#__PURE__*/React.createElement(TableRow, {\n    key: datum.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    key: c.property,\n    scope: c.dataScope,\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, c.format ? c.format(datum) : datum[c.property]), /*#__PURE__*/React.createElement(Button, {\n    label: \"Submit\",\n    onClick: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    key: c.property,\n    border: \"top\",\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, c.footer)))))));\n}\n\nexport default Table_test;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Test.js"],"names":["React","Table","TableBody","TableCell","TableFooter","TableHeader","TableRow","Text","BOOKINFO","useQuery","Button","COLUMNS","property","label","dataScope","format","datum","title","Table_test","loading","error","data","map","c","align","bookinfos","id","footer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KADF,EACSC,SADT,EACoBC,SADpB,EAC+BC,WAD/B,EAC4CC,WAD5C,EACyDC,QADzD,EAEEC,IAFF,QAGO,SAHP;AAIA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,QAAT,QAAwB,gBAAxB;AACA,SAASC,MAAT,QAAuB,SAAvB;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,QAAQ,EAAE,IADZ;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,QAAQ,EAAE,OADZ;AAEEC,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,SAAS,EAAE,KAHb;AAIEC,EAAAA,MAAM,EAAEC,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,KAAK,CAACC,KAAf;AAJnB,CALc,EAWd;AACEL,EAAAA,QAAQ,EAAE,QADZ;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAXc,CAAhB;;AAkBA,SAASK,UAAT,GAAuB;AAErB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BZ,QAAQ,CAACD,QAAD,CAAzC;AAEA,MAAIW,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,OAAO,CAACW,GAAR,CAAYC,CAAC,iBACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAC,CAACX,QAAlB;AAA4B,IAAA,KAAK,EAAC,KAAlC;AAAwC,IAAA,MAAM,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAEW,CAAC,CAACC,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,CAAC,CAACV,KAAT,CADF,CADD,CADH,CADF,CADF,eAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,CAACI,SAAL,CAAeH,GAAf,CAAmBN,KAAK,iBACvB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAK,CAACU,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,OAAO,CAACW,GAAR,CAAYC,CAAC,iBACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAC,CAACX,QAAlB;AAA4B,IAAA,KAAK,EAAEW,CAAC,CAACT,SAArC;AAAgD,IAAA,KAAK,EAAES,CAAC,CAACC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,CAAC,CAACR,MAAF,GAAWQ,CAAC,CAACR,MAAF,CAASC,KAAT,CAAX,GAA6BA,KAAK,CAACO,CAAC,CAACX,QAAH,CADrC,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,MAAM,CAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADD,CADH,CADD,CADH,CAVF,eAwBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACW,GAAR,CAAYC,CAAC,iBACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAC,CAACX,QAAlB;AAA4B,IAAA,MAAM,EAAC,KAAnC;AAAyC,IAAA,KAAK,EAAEW,CAAC,CAACC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,CAAC,CAACI,MAAT,CADF,CADD,CADH,CADF,CAxBF,CADA,CAFF;AAsCA;;AAEF,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport {\n  Table, TableBody, TableCell, TableFooter, TableHeader, TableRow,\n  Text,\n} from 'grommet';\nimport { BOOKINFO } from './Query'\nimport { useQuery} from '@apollo/client';\nimport { Button } from 'grommet';\n\nconst COLUMNS = [\n  {\n    property: 'id',\n    label: 'ID'\n  },\n  {\n    property: 'title',\n    label: 'Title',\n    dataScope: 'row',\n    format: datum => <strong>{datum.title}</strong>,\n  },\n  {\n    property: 'author',\n    label: 'Author',\n  },\n  \n];\n\nfunction Table_test () {\n\n  const { loading, error, data } = useQuery(BOOKINFO)\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n  \n    <div>\n    <Table margin=\"large\">\n      <TableHeader>\n        <TableRow>\n          {COLUMNS.map(c => (\n            <TableCell key={c.property} scope='col' border='bottom' align={c.align}>\n              <Text>{c.label}</Text>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data.bookinfos.map(datum => (\n          <TableRow key={datum.id}>\n            {COLUMNS.map(c => (\n              <TableCell key={c.property} scope={c.dataScope} align={c.align}>\n                <Text>\n                  {c.format ? c.format(datum) : datum[c.property]}\n                </Text>\n                <Button label='Submit' onClick={() => {}} />\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          {COLUMNS.map(c => (\n            <TableCell key={c.property} border='top' align={c.align}>\n              <Text>{c.footer}</Text>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableFooter>\n    </Table>\n  </div>\n)}\n\nexport default Table_test;"]},"metadata":{},"sourceType":"module"}