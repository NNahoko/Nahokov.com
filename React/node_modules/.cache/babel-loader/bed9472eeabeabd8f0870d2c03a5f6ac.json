{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Bookinfos.js\";\nimport React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { DELETE_BOOKINFO, BOOKINFO } from './Query'; //import styles from './Table.module.css'\n\nimport Edit from './SelectEdit';\nimport { Table, TableBody, TableCell, TableFooter, TableHeader, TableRow, Text, Grommet, Button, Box } from 'grommet';\nimport { Add, Close } from \"grommet-icons\";\nimport EditForm from './EditBookinfo';\nexport const BookInfos = React.createContext(); //////\n\nconst COLUMNS = [{\n  property: 'id',\n  label: 'ID'\n}, {\n  property: 'title',\n  label: 'Title',\n  dataScope: 'row',\n  format: book => /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, book.title)\n}, {\n  property: 'author',\n  label: 'Author'\n}]; //////\n\nfunction Books() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BOOKINFO);\n  const [deleteBookinfo] = useMutation(DELETE_BOOKINFO, {\n    refetchQueries: [{\n      query: BOOKINFO\n    }]\n  });\n\n  const deleteInfo = id => {\n    deleteBookinfo({\n      variables: {\n        id\n      }\n    });\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return /*#__PURE__*/React.createElement(Grommet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"madium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    key: c.property,\n    scope: \"col\",\n    border: \"bottom\",\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, c.label))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, data.bookinfos.map(book => /*#__PURE__*/React.createElement(TableRow, {\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    scope: \"col\",\n    border: \"bottom\",\n    key: c.property,\n    scope: c.dataScope,\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, c.format ? c.format(book) : book[c.property]))), /*#__PURE__*/React.createElement(Button, {\n    color: \"#3D138D\",\n    margin: \"xsmall\",\n    size: \"small\",\n    icon: /*#__PURE__*/React.createElement(Close, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 72\n      }\n    }),\n    onClick: () => deleteInfo(book.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BookInfos.Provider, {\n    value: book,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    key: c.property,\n    border: \"top\",\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }))))))));\n}\n\nexport default Books;\n/*\nfunction Books () {\n  const { loading, error, data } = useQuery(BOOKINFO);\n  \n  const [ deleteBookinfo ] = useMutation(DELETE_BOOKINFO, {\n      refetchQueries: [ { query: BOOKINFO } ]\n  })\n\n  \n\n  const deleteInfo = (id) => {\n      deleteBookinfo({ variables: { id } })\n  }\n  \n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n      return (\n        <div>\n        <table className={styles.table}>\n        <thead>\n          <tr><th>ID</th>\n            <th>Title</th>\n            <th>Author</th></tr>\n        </thead>\n        <tbody>\n          {data.bookinfos.map(book => (\n        <tr key={book.id}><td>{book.id}</td>\n                          <td>{book.title}</td>\n                          <td>{book.author}</td>\n                          <td><button onClick={() => deleteInfo(book.id)} >Delete</button></td>\n                          <BookInfos.Provider value={book}>\n                          <td><Edit /></td>\n                          </BookInfos.Provider></tr>\n                    ))}\n        </tbody>\n      </table>\n      </div>\n        );\n}\n*/\n\n/*\nfunction Books () {\n    const { loading, error, data } = useQuery(BOOKINFO);\n    \n    const [ deleteBookinfo ] = useMutation(DELETE_BOOKINFO, {\n        refetchQueries: [ { query: BOOKINFO } ]\n    })\n\n\n    const deleteInfo = (id) => {\n        deleteBookinfo({ variables: { id } })\n    }\n    \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n        return (\n            <div>\n              {data.bookinfos.map(book => (\n                < li  key={book.id}>ã€€\n                    <p>{book.id}</p>\n                    <p>{book.title}</p>\n                    <p>{book.author}</p>\n                    <button onClick={() => deleteInfo(book.id)} >Delete</button>\n                    <Selector/>\n                </li>\n                \n              ))}\n            </div>\n          );\n  }\n\nexport default Books;\n*/","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Bookinfos.js"],"names":["React","useQuery","useMutation","DELETE_BOOKINFO","BOOKINFO","Edit","Table","TableBody","TableCell","TableFooter","TableHeader","TableRow","Text","Grommet","Button","Box","Add","Close","EditForm","BookInfos","createContext","COLUMNS","property","label","dataScope","format","book","title","Books","loading","error","data","deleteBookinfo","refetchQueries","query","deleteInfo","id","variables","map","c","align","bookinfos"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,SAA1C,C,CACA;;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAGA,SACEC,KADF,EACSC,SADT,EACoBC,SADpB,EAC+BC,WAD/B,EAC4CC,WAD5C,EACyDC,QADzD,EAEEC,IAFF,EAGEC,OAHF,EAIEC,MAJF,EAKEC,GALF,QAMO,SANP;AAOA,SAASC,GAAT,EAAcC,KAAd,QAA2B,eAA3B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAO,MAAMC,SAAS,GAAGnB,KAAK,CAACoB,aAAN,EAAlB,C,CAEP;;AACA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,QAAQ,EAAE,IADZ;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,QAAQ,EAAE,OADZ;AAEEC,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,SAAS,EAAE,KAHb;AAIEC,EAAAA,MAAM,EAAEC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,IAAI,CAACC,KAAd;AAJlB,CALc,EAWd;AACEL,EAAAA,QAAQ,EAAE,QADZ;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAXc,CAAhB,C,CAiBA;;AAEA,SAASK,KAAT,GAAkB;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2B9B,QAAQ,CAACG,QAAD,CAAzC;AAGA,QAAM,CAAE4B,cAAF,IAAqB9B,WAAW,CAACC,eAAD,EAAkB;AACtD8B,IAAAA,cAAc,EAAE,CAAE;AAAEC,MAAAA,KAAK,EAAE9B;AAAT,KAAF;AADsC,GAAlB,CAAtC;;AAIA,QAAM+B,UAAU,GAAIC,EAAD,IAAQ;AACzBJ,IAAAA,cAAc,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAAd;AACH,GAFC;;AAIA,MAAIP,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,sBACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,MAAT;AAAU,IAAA,KAAK,EAAC,QAAhB;AAAyB,IAAA,OAAO,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,OAAO,CAACiB,GAAR,CAAYC,CAAC,iBACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAC,CAACjB,QAAlB;AAA4B,IAAA,KAAK,EAAC,KAAlC;AAAwC,IAAA,MAAM,EAAC,QAA/C;AAAwD,IAAA,KAAK,EAAEiB,CAAC,CAACC,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,CAAC,CAAChB,KAAT,CADF,CADD,CADH,CADF,CADF,eAUE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,IAAI,CAACU,SAAL,CAAeH,GAAf,CAAmBZ,IAAI,iBACtB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACU,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,OAAO,CAACiB,GAAR,CAAYC,CAAC,iBACZ,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,KAAjB;AAAuB,IAAA,MAAM,EAAC,QAA9B;AAAuC,IAAA,GAAG,EAAEA,CAAC,CAACjB,QAA9C;AAAwD,IAAA,KAAK,EAAEiB,CAAC,CAACf,SAAjE;AAA4E,IAAA,KAAK,EAAEe,CAAC,CAACC,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,CAAC,CAACd,MAAF,GAAWc,CAAC,CAACd,MAAF,CAASC,IAAT,CAAX,GAA4BA,IAAI,CAACa,CAAC,CAACjB,QAAH,CADnC,CADF,CADD,CADH,eAQE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,MAAM,EAAC,QAA/B;AAAwC,IAAA,IAAI,EAAC,OAA7C;AAAqD,IAAA,IAAI,eAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3D;AAAsE,IAAA,OAAO,EAAE,MAAMa,UAAU,CAACT,IAAI,CAACU,EAAN,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEV,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CATF,CADD,CADH,CAVF,eA2BE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACiB,GAAR,CAAYC,CAAC,iBACZ,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAC,CAACjB,QAAlB;AAA4B,IAAA,MAAM,EAAC,KAAnC;AAAyC,IAAA,KAAK,EAAEiB,CAAC,CAACC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CA3BF,CADA,CADA,CADF,CADA;AA4CA;;AAEF,eAAeZ,KAAf;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA","sourcesContent":["import React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { DELETE_BOOKINFO, BOOKINFO } from './Query'\n//import styles from './Table.module.css'\nimport Edit from './SelectEdit'\n\n\nimport {\n  Table, TableBody, TableCell, TableFooter, TableHeader, TableRow,\n  Text,\n  Grommet,\n  Button,\n  Box\n} from 'grommet';\nimport { Add, Close } from \"grommet-icons\";\nimport EditForm from './EditBookinfo';\n\nexport const BookInfos = React.createContext()\n\n//////\nconst COLUMNS = [\n  {\n    property: 'id',\n    label: 'ID'\n  },\n  {\n    property: 'title',\n    label: 'Title',\n    dataScope: 'row',\n    format: book => <strong>{book.title}</strong>,\n  },\n  {\n    property: 'author',\n    label: 'Author',\n  },\n  \n];\n//////\n\nfunction Books () {\n  const { loading, error, data } = useQuery(BOOKINFO)\n\n\n  const [ deleteBookinfo ] = useMutation(DELETE_BOOKINFO, {\n    refetchQueries: [ { query: BOOKINFO } ]\n})\n\n  const deleteInfo = (id) => {\n    deleteBookinfo({ variables: { id } })\n}\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n  <Grommet>\n    <Box fill align=\"center\" justify=\"center\">\n    <Box width=\"madium\">\n    <Table>\n      <TableHeader>\n        <TableRow>\n          {COLUMNS.map(c => (\n            <TableCell key={c.property} scope='col' border='bottom' align={c.align}>\n              <Text>{c.label}</Text>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {data.bookinfos.map(book => (\n          <TableRow key={book.id}>\n            {COLUMNS.map(c => (\n              <TableCell scope=\"col\" border=\"bottom\" key={c.property} scope={c.dataScope} align={c.align}>\n                <Text>\n                  {c.format ? c.format(book) : book[c.property]}\n                </Text>\n              </TableCell>\n            ))}\n            <Button color=\"#3D138D\" margin=\"xsmall\" size=\"small\" icon={<Close />} onClick={() => deleteInfo(book.id)} />\n            <BookInfos.Provider value={book}>\n            <EditForm/>\n            </BookInfos.Provider>\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          {COLUMNS.map(c => (\n            <TableCell key={c.property} border='top' align={c.align}>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableFooter>\n    </Table>\n    \n    </Box>\n    </Box>\n  </Grommet>\n)}\n\nexport default Books;\n\n/*\nfunction Books () {\n  const { loading, error, data } = useQuery(BOOKINFO);\n  \n  const [ deleteBookinfo ] = useMutation(DELETE_BOOKINFO, {\n      refetchQueries: [ { query: BOOKINFO } ]\n  })\n\n  \n\n  const deleteInfo = (id) => {\n      deleteBookinfo({ variables: { id } })\n  }\n  \n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n      return (\n        <div>\n        <table className={styles.table}>\n        <thead>\n          <tr><th>ID</th>\n            <th>Title</th>\n            <th>Author</th></tr>\n        </thead>\n        <tbody>\n          {data.bookinfos.map(book => (\n        <tr key={book.id}><td>{book.id}</td>\n                          <td>{book.title}</td>\n                          <td>{book.author}</td>\n                          <td><button onClick={() => deleteInfo(book.id)} >Delete</button></td>\n                          <BookInfos.Provider value={book}>\n                          <td><Edit /></td>\n                          </BookInfos.Provider></tr>\n                    ))}\n        </tbody>\n      </table>\n      </div>\n        );\n}\n*/\n\n/*\nfunction Books () {\n    const { loading, error, data } = useQuery(BOOKINFO);\n    \n    const [ deleteBookinfo ] = useMutation(DELETE_BOOKINFO, {\n        refetchQueries: [ { query: BOOKINFO } ]\n    })\n\n\n    const deleteInfo = (id) => {\n        deleteBookinfo({ variables: { id } })\n    }\n    \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n        return (\n            <div>\n              {data.bookinfos.map(book => (\n                < li  key={book.id}>ã€€\n                    <p>{book.id}</p>\n                    <p>{book.title}</p>\n                    <p>{book.author}</p>\n                    <button onClick={() => deleteInfo(book.id)} >Delete</button>\n                    <Selector/>\n                </li>\n                \n              ))}\n            </div>\n          );\n  }\n\nexport default Books;\n*/\n"]},"metadata":{},"sourceType":"module"}