{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Todolist.js\";\nimport React from \"react\";\nimport { Grommet, Box, List, Heading, Grid } from \"grommet\";\nimport { useQuery } from \"@apollo/client\";\nimport { TASK } from \"./Query\";\n\nfunction TodoList() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TASK);\n  console.log(data);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return /*#__PURE__*/React.createElement(Grommet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fill: true,\n    rows: [\"auto\", \"flex\", \"auto\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    align: \"center\",\n    tag: \"header\",\n    pad: \"medium\",\n    color: \"#00739D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    margin: \"none\",\n    color: \"#00739D\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"My TodoList\")), /*#__PURE__*/React.createElement(List, {\n    primaryKey: \"task\",\n    secondaryKey: \"limit\",\n    data: data.tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n}\n/*\n{data.tasks.map((task) => (\n        <li key={task.id}>\n          <p>{task.id}</p>\n          <p>{task.task}</p>\n          <p>{task.limit}</p>\n        </li>\n      ))}\n*/\n\n/*\nconst TodoList = () => {\n  const result = useQuery(TASK);\n  console.log(result);\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  return <div>{result.data.tasks.map((p) => p.task).join(\", \")},</div>;\n};\n*/\n\n/*\nfunction TodoList() {\n  const { loading, error, data } = useQuery(TASK);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Grommet>\n      <Box align=\"center\" pad=\"large\">\n        <List data={data} />\n      </Box>\n    </Grommet>\n  );\n}\n*/\n\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Todolist.js"],"names":["React","Grommet","Box","List","Heading","Grid","useQuery","TASK","TodoList","loading","error","data","console","log","tasks"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCC,IAAtC,QAAkD,SAAlD;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,SAArB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,IAAD,CAAzC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,QAAX;AAAoB,IAAA,GAAG,EAAC,QAAxB;AAAiC,IAAA,GAAG,EAAC,QAArC;AAA8C,IAAA,KAAK,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAuC,IAAA,IAAI,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,eAOE,oBAAC,IAAD;AAAM,IAAA,UAAU,EAAC,MAAjB;AAAwB,IAAA,YAAY,EAAC,OAArC;AAA6C,IAAA,IAAI,EAAEC,IAAI,CAACG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAaD;AAED;;;;;;;;;;AASA;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;AAeA,eAAeN,QAAf","sourcesContent":["import React from \"react\";\nimport { Grommet, Box, List, Heading, Grid } from \"grommet\";\nimport { useQuery } from \"@apollo/client\";\nimport { TASK } from \"./Query\";\n\nfunction TodoList() {\n  const { loading, error, data } = useQuery(TASK);\n\n  console.log(data);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Grommet>\n      <Grid fill rows={[\"auto\", \"flex\", \"auto\"]}>\n        <Box align=\"center\" tag=\"header\" pad=\"medium\" color=\"#00739D\">\n          <Heading margin=\"none\" color=\"#00739D\" size=\"small\">\n            My TodoList\n          </Heading>\n        </Box>\n\n        <List primaryKey=\"task\" secondaryKey=\"limit\" data={data.tasks} />\n      </Grid>\n    </Grommet>\n  );\n}\n\n/*\n{data.tasks.map((task) => (\n        <li key={task.id}>\n          <p>{task.id}</p>\n          <p>{task.task}</p>\n          <p>{task.limit}</p>\n        </li>\n      ))}\n*/\n/*\nconst TodoList = () => {\n  const result = useQuery(TASK);\n  console.log(result);\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  return <div>{result.data.tasks.map((p) => p.task).join(\", \")},</div>;\n};\n*/\n\n/*\nfunction TodoList() {\n  const { loading, error, data } = useQuery(TASK);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Grommet>\n      <Box align=\"center\" pad=\"large\">\n        <List data={data} />\n      </Box>\n    </Grommet>\n  );\n}\n*/\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}