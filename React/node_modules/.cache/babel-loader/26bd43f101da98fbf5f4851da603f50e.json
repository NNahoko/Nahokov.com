{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Test_2.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_BOOKINFO, BOOKINFO } from './Query';\nimport { Box, Button, Grommet, Form, FormField, Text, TextInput } from \"grommet\";\nimport { grommet } from \"grommet/themes\"; // This example shows a way to perform validation across multiple fields.\n\nconst Example = () => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [createBookinfo] = useMutation(CREATE_BOOKINFO, {\n    refetchQueries: [{\n      query: BOOKINFO\n    }]\n  });\n\n  const submit = () => {\n    createBookinfo({\n      variables: {\n        title,\n        author\n      }\n    });\n    setTitle('');\n    setAuthor('');\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: ({\n      value: nextValue\n    }) => submit(nextValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Title\",\n    name: \"title\",\n    margin: (\"small\", {\n      \"bottom\": \"small\"\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"title\",\n    type: \"title\",\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormField, {\n    label: \"Author\",\n    name: \"author\",\n    margin: (\"small\", {\n      \"bottom\": \"small\"\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"author\",\n    type: \"author\",\n    value: author,\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    justify: \"between\",\n    margin: {\n      top: \"small\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    type: \"submit\",\n    label: \"Add\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default Example;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Test_2.js"],"names":["React","useState","useMutation","CREATE_BOOKINFO","BOOKINFO","Box","Button","Grommet","Form","FormField","Text","TextInput","grommet","Example","title","setTitle","author","setAuthor","createBookinfo","refetchQueries","query","submit","variables","value","nextValue","target","top"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_BOOKINFO, BOOKINFO } from './Query'\n\nimport {\n  Box,\n  Button,\n  Grommet,\n  Form,\n  FormField,\n  Text,\n  TextInput\n} from \"grommet\";\nimport { grommet } from \"grommet/themes\";\n\n// This example shows a way to perform validation across multiple fields.\nconst Example = () => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n\n  \n  const [ createBookinfo ] = useMutation(CREATE_BOOKINFO, {\n      refetchQueries: [ { query: BOOKINFO } ]\n  })\n\n\n  const submit =  () => {\n    \n    createBookinfo({  variables: { title, author } })\n\n    setTitle('')\n    setAuthor('')\n    }\n\n\n  return (\n    <Grommet >\n      <Box fill align=\"center\" justify=\"center\" >\n        <Box width=\"medium\">\n          <Form \n            onSubmit={({ value: nextValue }) => submit(nextValue)}>\n            <FormField label=\"Title\" name=\"title\"  margin={\"small\",{\"bottom\":\"small\"}} required>\n              <TextInput name=\"title\" type=\"title\" value={title}\n              onChange={({ target }) => setTitle(target.value)}/>\n            </FormField>\n\n            <FormField label=\"Author\" name=\"author\" margin={\"small\",{\"bottom\":\"small\"}} required>\n              <TextInput  name=\"author\" type=\"author\" value={author}\n              onChange={({ target }) => setAuthor(target.value)}/>\n            </FormField>\n\n            <Box direction=\"row\" justify=\"between\" margin={{ top: \"small\" }}>\n             \n              <Button size=\"small\" type=\"submit\" label=\"Add\" primary />\n            </Box>\n          </Form>\n        </Box>\n      </Box>\n    </Grommet>\n  );\n};\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}