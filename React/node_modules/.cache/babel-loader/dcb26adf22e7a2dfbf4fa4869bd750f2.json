{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Test_5.js\";\nimport React, { useState } from \"react\";\nimport { Box, Heading, grommet, Grommet, InfiniteScroll, Table, TableRow, TableBody, TableCell, TableHeader, Text } from \"grommet\";\n\nconst InfiniteScrollInTable = () => {\n  const step = 25;\n  const [results, setResults] = useState(Array.from({\n    length: 50\n  }, () => Math.floor(Math.random() * 1000000)));\n\n  const load = () => {\n    console.log(`InfiniteScroll fires onMore after loading ${step} items`);\n    setResults([...results, ...Array.from({\n      length: 50\n    }, () => Math.floor(Math.random() * 1000000))]);\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    theme: grommet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    level: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    gap: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"InfiniteScroll embedded in a Table\"), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Scroll down to load more data, open console to see loading info\"))), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    scope: \"col\",\n    border: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Key\"), /*#__PURE__*/React.createElement(TableCell, {\n    scope: \"col\",\n    border: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"Cartoon\"), /*#__PURE__*/React.createElement(TableCell, {\n    scope: \"col\",\n    border: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Movie\"), /*#__PURE__*/React.createElement(TableCell, {\n    scope: \"col\",\n    border: \"bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Year\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    renderMarker: marker => /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, marker)),\n    scrollableAncestor: \"window\",\n    items: results,\n    onMore: () => load(),\n    step: step,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, result => /*#__PURE__*/React.createElement(TableRow, {\n    key: result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, result), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"cartoon\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, \"movie name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, \"year\")))))));\n};\n\nexport default InfiniteScrollInTable;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Test_5.js"],"names":["React","useState","Box","Heading","grommet","Grommet","InfiniteScroll","Table","TableRow","TableBody","TableCell","TableHeader","Text","InfiniteScrollInTable","step","results","setResults","Array","from","length","Math","floor","random","load","console","log","marker","result"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\n\nimport {\n  Box,\n  Heading,\n  grommet,\n  Grommet,\n  InfiniteScroll,\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n  Text\n} from \"grommet\";\n\nconst InfiniteScrollInTable = () => {\n  const step = 25;\n  const [results, setResults] = useState(\n    Array.from({ length: 50 }, () => Math.floor(Math.random() * 1000000))\n  );\n  const load = () => {\n    console.log(`InfiniteScroll fires onMore after loading ${step} items`);\n    setResults([\n      ...results,\n      ...Array.from({ length: 50 }, () => Math.floor(Math.random() * 1000000))\n    ]);\n  };\n\n  return (\n    <Grommet theme={grommet}>\n     <Box fill align=\"center\" justify=\"center\">\n    \n        <Heading level={3}>\n          <Box gap=\"small\">\n            <strong>InfiniteScroll embedded in a Table</strong>\n            <Text>\n              Scroll down to load more data, open console to see loading info\n            </Text>\n          </Box>\n        </Heading>\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Key\n              </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Cartoon\n              </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Movie\n              </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Year\n              </TableCell>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            <InfiniteScroll\n              renderMarker={marker => (\n                <TableRow>\n                  <TableCell>{marker}</TableCell>\n                </TableRow>\n              )}\n              scrollableAncestor=\"window\"\n              items={results}\n              onMore={() => load()}\n              step={step}\n            >\n              {result => (\n                <TableRow key={result}>\n                  <TableCell>{result}</TableCell>\n                  <TableCell>cartoon</TableCell>\n                  <TableCell>movie name</TableCell>\n                  <TableCell>year</TableCell>\n                </TableRow>\n              )}\n            </InfiniteScroll>\n          </TableBody>\n        </Table>\n      </Box>\n    </Grommet>\n  );\n};\nexport default InfiniteScrollInTable;"]},"metadata":{},"sourceType":"module"}