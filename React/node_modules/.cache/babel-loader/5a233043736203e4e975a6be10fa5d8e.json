{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/CreateBook.js\";\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_BOOKINFO, BOOKINFO } from './Query';\nimport { Box, Button, Grommet, Form, FormField, Text, TextInput } from \"grommet\";\n\nconst BookForm = () => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [createBookinfo] = useMutation(CREATE_BOOKINFO, {\n    refetchQueries: [{\n      query: BOOKINFO\n    }]\n  });\n\n  const submit = () => {\n    createBookinfo({\n      variables: {\n        title,\n        author\n      }\n    });\n    setTitle('');\n    setAuthor('');\n  };\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"xsmall\",\n    label: \"Edit\",\n    onClick: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), open && /*#__PURE__*/React.createElement(Layer, {\n    position: \"right\",\n    full: \"vertical\",\n    modal: true,\n    onClickOutside: onClose,\n    onEsc: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"form\",\n    fill: \"vertical\",\n    overflow: \"auto\",\n    width: \"medium\",\n    pad: \"medium\",\n    onSubmit: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    direction: \"row\",\n    justify: \"between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    level: 2,\n    margin: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"EditBookinfo\"), /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Close, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 31\n      }\n    }),\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    flex: \"grow\",\n    overflow: \"auto\",\n    pad: {\n      vertical: \"medium\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: ({\n      value: nextValue\n    }) => submit(nextValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Title\",\n    name: \"title\",\n    margin: (\"small\", {\n      \"bottom\": \"small\"\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"title\",\n    type: \"title\",\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormField, {\n    label: \"Author\",\n    name: \"author\",\n    margin: (\"small\", {\n      \"bottom\": \"small\"\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"author\",\n    type: \"author\",\n    value: author,\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    justify: \"between\",\n    margin: {\n      top: \"small\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    type: \"submit\",\n    label: \"Add\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    as: \"footer\",\n    align: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    label: \"Edit\",\n    onClick: send,\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default BookForm;\n/*\nconst BookForm = () => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    \n  \n    const [ createBookinfo ] = useMutation(CREATE_BOOKINFO, {\n        refetchQueries: [ { query: BOOKINFO } ]\n    })\n\n\n    const submit =  (event) => {\n      event.preventDefault()\n  \n      createBookinfo({  variables: { title, author } })\n  \n      setTitle('')\n      setAuthor('')\n      }\n  \n    return (\n      <div>\n        <h2>Create new</h2>\n        <form onSubmit={submit}>\n          <div>\n            title <input value={title}\n              onChange={({ target }) => setTitle(target.value)}\n            />\n          </div>\n          <div>\n          author <input value={author}\n              onChange={({ target }) => setAuthor(target.value)}\n            />\n          </div>\n          \n          \n          <Button type='submit' margin=\"xsmall\" size=\"xsmall\" label='Add'/>\n        </form>\n      </div>\n    )\n  }\n\n///////////////////\nreturn (\n  <Grommet >\n    <Box fill align=\"center\" justify=\"center\" >\n      <Box width=\"medium\" margin={{\"bottom\":\"medium\"}}>\n        <Form \n          onSubmit={({ value: nextValue }) => submit(nextValue)}>\n          <FormField label=\"Title\" name=\"title\"  margin={\"small\",{\"bottom\":\"small\",}} required>\n            <TextInput name=\"title\" type=\"title\" value={title}\n            onChange={({ target }) => setTitle(target.value)}/>\n          </FormField>\n\n          <FormField label=\"Author\" name=\"author\" margin={\"small\",{\"bottom\":\"small\"}} required>\n            <TextInput  name=\"author\" type=\"author\" value={author}\n            onChange={({ target }) => setAuthor(target.value)}/>\n          </FormField>\n\n          <Box direction=\"row\" justify=\"between\" margin={{ top: \"small\" }}>\n           \n            <Button size=\"small\" type=\"submit\" label=\"Add\" primary />\n          </Box>\n        </Form>\n      </Box>\n    </Box>\n  </Grommet>\n);\n};\n:\n*/","map":{"version":3,"sources":["/Users/n/my-app/src/Components/CreateBook.js"],"names":["React","useState","useMutation","CREATE_BOOKINFO","BOOKINFO","Box","Button","Grommet","Form","FormField","Text","TextInput","BookForm","title","setTitle","author","setAuthor","createBookinfo","refetchQueries","query","submit","variables","onOpen","open","onClose","vertical","value","nextValue","target","top","send"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_BOOKINFO, BOOKINFO } from './Query'\n\nimport {\n  Box,\n  Button,\n  Grommet,\n  Form,\n  FormField,\n  Text,\n  TextInput\n} from \"grommet\";\n\n\nconst BookForm = () => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n\n  \n  const [ createBookinfo ] = useMutation(CREATE_BOOKINFO, {\n      refetchQueries: [ { query: BOOKINFO } ]\n  })\n\n\n  const submit =  () => {\n    \n    createBookinfo({  variables: { title, author } })\n\n    setTitle('')\n    setAuthor('')\n    }\n\n\n  return (\n    <Grommet >\n      <Box fill align=\"center\" justify=\"center\">\n        <Button size=\"xsmall\" label=\"Edit\" onClick={onOpen} />\n        {open && (\n          <Layer\n            position=\"right\"\n            full=\"vertical\"\n            modal\n            onClickOutside={onClose}\n            onEsc={onClose}\n          >\n            <Box\n              as=\"form\"\n              fill=\"vertical\"\n              overflow=\"auto\"\n              width=\"medium\"\n              pad=\"medium\"\n              onSubmit={onClose}\n            >\n              <Box flex={false} direction=\"row\" justify=\"between\">\n                <Heading level={2} margin=\"none\">\n                  EditBookinfo\n                </Heading>\n                <Button icon={<Close />} onClick={onClose} />\n              </Box>\n              <Box flex=\"grow\" overflow=\"auto\" pad={{ vertical: \"medium\" }}>\n              <Form \n          onSubmit={({ value: nextValue }) => submit(nextValue)}>\n          <FormField label=\"Title\" name=\"title\"  margin={\"small\",{\"bottom\":\"small\",}} required>\n            <TextInput name=\"title\" type=\"title\" value={title}\n            onChange={({ target }) => setTitle(target.value)}/>\n          </FormField>\n\n          <FormField label=\"Author\" name=\"author\" margin={\"small\",{\"bottom\":\"small\"}} required>\n            <TextInput  name=\"author\" type=\"author\" value={author}\n            onChange={({ target }) => setAuthor(target.value)}/>\n          </FormField>\n\n          <Box direction=\"row\" justify=\"between\" margin={{ top: \"small\" }}>\n           \n            <Button size=\"small\" type=\"submit\" label=\"Add\" primary />\n          </Box>\n        </Form>\n              </Box>\n              <Box flex={false} as=\"footer\" align=\"start\">\n                <Button\n                  type=\"submit\"\n                  label=\"Edit\"\n                  onClick={send}\n                  primary\n                />\n              </Box>\n            </Box>\n          </Layer>\n        )}\n      </Box>\n    </Grommet>\n  );\n};\n  export default BookForm\n\n/*\nconst BookForm = () => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    \n  \n    const [ createBookinfo ] = useMutation(CREATE_BOOKINFO, {\n        refetchQueries: [ { query: BOOKINFO } ]\n    })\n\n\n    const submit =  (event) => {\n      event.preventDefault()\n  \n      createBookinfo({  variables: { title, author } })\n  \n      setTitle('')\n      setAuthor('')\n      }\n  \n    return (\n      <div>\n        <h2>Create new</h2>\n        <form onSubmit={submit}>\n          <div>\n            title <input value={title}\n              onChange={({ target }) => setTitle(target.value)}\n            />\n          </div>\n          <div>\n          author <input value={author}\n              onChange={({ target }) => setAuthor(target.value)}\n            />\n          </div>\n          \n          \n          <Button type='submit' margin=\"xsmall\" size=\"xsmall\" label='Add'/>\n        </form>\n      </div>\n    )\n  }\n\n///////////////////\nreturn (\n  <Grommet >\n    <Box fill align=\"center\" justify=\"center\" >\n      <Box width=\"medium\" margin={{\"bottom\":\"medium\"}}>\n        <Form \n          onSubmit={({ value: nextValue }) => submit(nextValue)}>\n          <FormField label=\"Title\" name=\"title\"  margin={\"small\",{\"bottom\":\"small\",}} required>\n            <TextInput name=\"title\" type=\"title\" value={title}\n            onChange={({ target }) => setTitle(target.value)}/>\n          </FormField>\n\n          <FormField label=\"Author\" name=\"author\" margin={\"small\",{\"bottom\":\"small\"}} required>\n            <TextInput  name=\"author\" type=\"author\" value={author}\n            onChange={({ target }) => setAuthor(target.value)}/>\n          </FormField>\n\n          <Box direction=\"row\" justify=\"between\" margin={{ top: \"small\" }}>\n           \n            <Button size=\"small\" type=\"submit\" label=\"Add\" primary />\n          </Box>\n        </Form>\n      </Box>\n    </Box>\n  </Grommet>\n);\n};\n:\n*/"]},"metadata":{},"sourceType":"module"}