{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Todo_test.js\";\nimport React, { useState } from \"react\";\nimport { Box, Grommet, CheckBox } from \"grommet\";\nimport { EDIT_TASK_COMPLETED, TASK, DELETE_TASK, PART_TASK } from \"./Query\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction Todotest() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TASK);\n  const [checked, setChecked] = useState(true);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, \"Error :(\");\n  return /*#__PURE__*/React.createElement(Grommet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, data.tasks.map(task => /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CheckBox, {\n    target: task.id,\n    checked: checked,\n    label: task.task,\n    onChange: id => setChecked(id.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default Todotest;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Todo_test.js"],"names":["React","useState","Box","Grommet","CheckBox","EDIT_TASK_COMPLETED","TASK","DELETE_TASK","PART_TASK","useQuery","Todotest","loading","error","data","checked","setChecked","tasks","map","task","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,QAAuC,SAAvC;AACA,SAASC,mBAAT,EAA8BC,IAA9B,EAAoCC,WAApC,EAAiDC,SAAjD,QAAkE,SAAlE;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,QAAQ,CAACH,IAAD,CAAzC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AAEA,MAAIU,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBACd,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,MAAM,EAAEA,IAAI,CAACC,EADf;AAEE,IAAA,OAAO,EAAEL,OAFX;AAGE,IAAA,KAAK,EAAEI,IAAI,CAACA,IAHd;AAIE,IAAA,QAAQ,EAAGC,EAAD,IAAQJ,UAAU,CAACI,EAAE,CAACL,OAAJ,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF,CADF;AAgBD;;AAED,eAAeJ,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Grommet, CheckBox } from \"grommet\";\nimport { EDIT_TASK_COMPLETED, TASK, DELETE_TASK, PART_TASK } from \"./Query\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction Todotest() {\n  const { loading, error, data } = useQuery(TASK);\n  const [checked, setChecked] = useState(true);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Grommet>\n      <Box>\n        {data.tasks.map((task) => (\n          <Box>\n            <CheckBox\n              target={task.id}\n              checked={checked}\n              label={task.task}\n              onChange={(id) => setChecked(id.checked)}\n            />\n          </Box>\n        ))}\n      </Box>\n    </Grommet>\n  );\n}\n\nexport default Todotest;\n"]},"metadata":{},"sourceType":"module"}