{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Test.js\";\nimport React from 'react';\nimport { Table, TableBody, TableCell, TableFooter, TableHeader, TableRow, Text } from 'grommet'; // Always should store amount in cents to avoid precision errors\n\nconst DATA = [{\n  id: 1,\n  name: 'Eric',\n  email: 'eric@local'\n}, {\n  id: 2,\n  name: 'Chris',\n  email: 'chris@local'\n}, {\n  id: 3,\n  name: 'Alan',\n  email: 'alan@local'\n}];\nconst COLUMNS = [{\n  property: 'id',\n  label: 'ID'\n}, {\n  property: 'name',\n  label: 'Name',\n  dataScope: 'row',\n  format: datum => /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, datum.name)\n}, {\n  property: 'email',\n  label: 'Email'\n}];\n\nfunction Table_test() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    caption: \"Simple Table\",\n    margin: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    key: c.property,\n    scope: \"col\",\n    border: \"bottom\",\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, c.label))))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, DATA.map(datum => /*#__PURE__*/React.createElement(TableRow, {\n    key: datum.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    key: c.property,\n    scope: c.dataScope,\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, c.format ? c.format(datum) : datum[c.property])))))), /*#__PURE__*/React.createElement(TableFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, COLUMNS.map(c => /*#__PURE__*/React.createElement(TableCell, {\n    key: c.property,\n    border: \"top\",\n    align: c.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, c.footer)))))));\n}\n\nexport default Table_test;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Test.js"],"names":["React","Table","TableBody","TableCell","TableFooter","TableHeader","TableRow","Text","DATA","id","name","email","COLUMNS","property","label","dataScope","format","datum","Table_test","map","c","align","footer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Table, TableBody, TableCell, TableFooter, TableHeader, TableRow,\n  Text,\n} from 'grommet';\n\n\n// Always should store amount in cents to avoid precision errors\nconst DATA = [\n  {\n    id: 1, name: 'Eric', email: 'eric@local',\n  },\n  {\n    id: 2, name: 'Chris', email: 'chris@local', \n  },\n  {\n    id: 3, name: 'Alan', email: 'alan@local', \n  },\n];\n\nconst COLUMNS = [\n  {\n    property: 'id',\n    label: 'ID'\n  },\n  {\n    property: 'name',\n    label: 'Name',\n    dataScope: 'row',\n    format: datum => <strong>{datum.name}</strong>,\n  },\n  {\n    property: 'email',\n    label: 'Email',\n  },\n  \n];\n\nfunction Table_test () {\n  return (\n  \n    <div>\n    <Table caption='Simple Table' margin=\"large\">\n      <TableHeader>\n        <TableRow>\n          {COLUMNS.map(c => (\n            <TableCell key={c.property} scope='col' border='bottom' align={c.align}>\n              <Text>{c.label}</Text>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {DATA.map(datum => (\n          <TableRow key={datum.id}>\n            {COLUMNS.map(c => (\n              <TableCell key={c.property} scope={c.dataScope} align={c.align}>\n                <Text>\n                  {c.format ? c.format(datum) : datum[c.property]}\n                </Text>\n              </TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          {COLUMNS.map(c => (\n            <TableCell key={c.property} border='top' align={c.align}>\n              <Text>{c.footer}</Text>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableFooter>\n    </Table>\n  </div>\n)}\n\nexport default Table_test;"]},"metadata":{},"sourceType":"module"}