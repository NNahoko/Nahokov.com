{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Todolist.js\";\nimport React from \"react\";\nimport { Grommet, Box, List } from \"grommet\";\nimport { gql, useQuery } from \"@apollo/client\";\nconst TASK = gql`\n  {\n    tasks {\n      id\n      task\n      limit\n    }\n  }\n`;\n\nconst TodoList = () => {\n  const result = useQuery(TASK);\n\n  if (result.loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }\n  }, result.data.tasks.map(p => p.task).join(\", \"), \",\");\n};\n/*\nfunction TodoList() {\n  const { loading, error, data } = useQuery(TASK);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Grommet>\n      <Box align=\"center\" pad=\"large\">\n        <List data={data} />\n      </Box>\n    </Grommet>\n  );\n}\n*/\n\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Todolist.js"],"names":["React","Grommet","Box","List","gql","useQuery","TASK","TodoList","result","loading","data","tasks","map","p","task","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,IAAvB,QAAmC,SAAnC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,MAAMC,IAAI,GAAGF,GAAI;;;;;;;;CAAjB;;AAUA,MAAMG,QAAQ,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGH,QAAQ,CAACC,IAAD,CAAvB;;AAEA,MAAIE,MAAM,CAACC,OAAX,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBC,CAAD,IAAOA,CAAC,CAACC,IAA/B,EAAqCC,IAArC,CAA0C,IAA1C,CAAN,MAAP;AACD,CARD;AAUA;;;;;;;;;;;;;;;;;AAeA,eAAeR,QAAf","sourcesContent":["import React from \"react\";\nimport { Grommet, Box, List } from \"grommet\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst TASK = gql`\n  {\n    tasks {\n      id\n      task\n      limit\n    }\n  }\n`;\n\nconst TodoList = () => {\n  const result = useQuery(TASK);\n\n  if (result.loading) {\n    return <div>loading...</div>;\n  }\n\n  return <div>{result.data.tasks.map((p) => p.task).join(\", \")},</div>;\n};\n\n/*\nfunction TodoList() {\n  const { loading, error, data } = useQuery(TASK);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Grommet>\n      <Box align=\"center\" pad=\"large\">\n        <List data={data} />\n      </Box>\n    </Grommet>\n  );\n}\n*/\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}