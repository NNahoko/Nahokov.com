{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Book.js\";\nimport React from 'react';\nimport { useQuery, gql } from '@apollo/client';\nconst query = gql`\n  {\n    bookinfos {\n      id\n      title \n      author\n    }\n  }\n`;\n\nfunction Books() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(query);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, bookinfos.map(book => /*#__PURE__*/React.createElement(\"li\", {\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }\n  }, book.author))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/n/my-app/src/Book.js"],"names":["React","useQuery","gql","query","Books","loading","error","data","bookinfos","map","book","id","title","author"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAEA,MAAMC,KAAK,GAAGD,GAAI;;;;;;;;CAAlB;;AAUA,SAASE,KAAT,GAAkB;AACd,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,KAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEP,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,SAAS,CAACC,GAAV,CAAcC,IAAI,iBACjB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,KAAT,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAI,CAACG,MAAT,CAFF,CADD,CADH,CADJ;AAUL;;AAEH,eAAeT,KAAf","sourcesContent":["import React from 'react';\nimport { useQuery, gql } from '@apollo/client';\n\nconst query = gql`\n  {\n    bookinfos {\n      id\n      title \n      author\n    }\n  }\n`\n\nfunction Books () {\n    const { loading, error, data } = useQuery(query);\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n  \n        return (\n            <ul>\n              {bookinfos.map(book => (\n                <li key={book.id}>\n                  <p>{book.title}</p>\n                  <p>{book.author}</p>\n                </li>\n              ))}\n            </ul>\n          );\n  }\n\nexport default Books;"]},"metadata":{},"sourceType":"module"}