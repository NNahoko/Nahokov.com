{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/CreateTodo.js\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_TASK, TASK } from \"./Query\";\nimport { Add, Close } from \"grommet-icons\";\nimport { Box, Button, FormField, Grommet, Heading, Layer, TextInput, Form, CheckBoxGroup } from \"grommet\";\n\nconst CreateTodo = () => {\n  const [task, setTask] = useState(\"\");\n  const [limit, setLimit] = useState(\"\"); /////\n\n  const [open, setOpen] = React.useState(false);\n\n  const onOpen = () => setOpen(true);\n\n  const onClose = () => setOpen(undefined); /////\n\n\n  const [createTask] = useMutation(CREATE_TASK, {\n    refetchQueries: [{\n      query: TASK\n    }]\n  });\n\n  const submit = () => {\n    createTask({\n      variables: {\n        task,\n        limit,\n        completed: false\n      }\n    });\n    setTask(\"\");\n    setLimit(\"\");\n  }; /////\n\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Add, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }),\n    label: \"Add\",\n    onClick: onOpen,\n    margin: {\n      top: \"large\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, open && /*#__PURE__*/React.createElement(Layer, {\n    position: \"center\",\n    modal: true,\n    onClickOutside: onClose,\n    onEsc: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    as: \"form\",\n    fill: \"vertical\",\n    overflow: \"auto\",\n    width: \"medium\",\n    pad: \"medium\",\n    onSubmit: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    direction: \"row\",\n    justify: \"between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    level: 2,\n    margin: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, \"Add Todo\"), /*#__PURE__*/React.createElement(Button, {\n    icon: /*#__PURE__*/React.createElement(Close, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }\n    }),\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    flex: \"grow\",\n    overflow: \"auto\",\n    pad: {\n      vertical: \"medium\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Task\",\n    name: \"task\",\n    margin: (\"small\", {\n      bottom: \"small\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"task\",\n    type: \"task\",\n    value: task,\n    onChange: ({\n      target\n    }) => setTask(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormField, {\n    label: \"Limit\",\n    name: \"limit\",\n    margin: (\"small\", {\n      bottom: \"small\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"limit\",\n    type: \"limit\",\n    value: limit,\n    onChange: ({\n      target\n    }) => setLimit(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(DateInput, {\n    format: \"mm/dd/yyyy\",\n    value: new Date().toISOString(),\n    onChange: ({\n      value\n    }) => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    flex: false,\n    as: \"footer\",\n    align: \"start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    label: \"Submit\",\n    onClick: submit,\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  })))))));\n};\n\nexport default CreateTodo;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/CreateTodo.js"],"names":["React","useState","useMutation","CREATE_TASK","TASK","Add","Close","Box","Button","FormField","Grommet","Heading","Layer","TextInput","Form","CheckBoxGroup","CreateTodo","task","setTask","limit","setLimit","open","setOpen","onOpen","onClose","undefined","createTask","refetchQueries","query","submit","variables","completed","top","vertical","bottom","target","value","Date","toISOString"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_TASK, TASK } from \"./Query\";\n\nimport { Add, Close } from \"grommet-icons\";\n\nimport {\n  Box,\n  Button,\n  FormField,\n  Grommet,\n  Heading,\n  Layer,\n  TextInput,\n  Form,\n  CheckBoxGroup,\n} from \"grommet\";\n\nconst CreateTodo = () => {\n  const [task, setTask] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n\n  /////\n  const [open, setOpen] = React.useState(false);\n  const onOpen = () => setOpen(true);\n  const onClose = () => setOpen(undefined);\n  /////\n\n  const [createTask] = useMutation(CREATE_TASK, {\n    refetchQueries: [{ query: TASK }],\n  });\n\n  const submit = () => {\n    createTask({ variables: { task, limit, completed: false } });\n\n    setTask(\"\");\n    setLimit(\"\");\n  };\n  /////\n\n  return (\n    <Grommet>\n      <Box fill align=\"center\" justify=\"center\">\n        <Button\n          icon={<Add />}\n          label=\"Add\"\n          onClick={onOpen}\n          margin={{ top: \"large\" }}\n        />\n        <Form>\n          {open && (\n            <Layer\n              position=\"center\"\n              modal\n              onClickOutside={onClose}\n              onEsc={onClose}\n            >\n              <Box\n                as=\"form\"\n                fill=\"vertical\"\n                overflow=\"auto\"\n                width=\"medium\"\n                pad=\"medium\"\n                onSubmit={onClose}\n              >\n                <Box flex={false} direction=\"row\" justify=\"between\">\n                  <Heading level={2} margin=\"none\">\n                    Add Todo\n                  </Heading>\n                  <Button icon={<Close />} onClick={onClose} />\n                </Box>\n\n                <Box flex=\"grow\" overflow=\"auto\" pad={{ vertical: \"medium\" }}>\n                  <FormField\n                    label=\"Task\"\n                    name=\"task\"\n                    margin={(\"small\", { bottom: \"small\" })}\n                  >\n                    <TextInput\n                      name=\"task\"\n                      type=\"task\"\n                      value={task}\n                      onChange={({ target }) => setTask(target.value)}\n                    />\n                  </FormField>\n                  <FormField\n                    label=\"Limit\"\n                    name=\"limit\"\n                    margin={(\"small\", { bottom: \"small\" })}\n                  >\n                    <TextInput\n                      name=\"limit\"\n                      type=\"limit\"\n                      value={limit}\n                      onChange={({ target }) => setLimit(target.value)}\n                    />\n                  </FormField>\n                  <DateInput\n                    format=\"mm/dd/yyyy\"\n                    value={new Date().toISOString()}\n                    onChange={({ value }) => {}}\n                  />\n                </Box>\n\n                <Box flex={false} as=\"footer\" align=\"start\">\n                  <Button\n                    type=\"submit\"\n                    label=\"Submit\"\n                    onClick={submit}\n                    primary\n                  />\n                </Box>\n              </Box>\n            </Layer>\n          )}\n        </Form>\n      </Box>\n    </Grommet>\n  );\n};\n\nexport default CreateTodo;\n"]},"metadata":{},"sourceType":"module"}