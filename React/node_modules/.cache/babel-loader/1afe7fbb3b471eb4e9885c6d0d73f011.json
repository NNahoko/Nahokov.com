{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/t.js\";\nimport React from 'react';\nimport { useQuery, useMutation, from } from '@apollo/client';\nimport { DELETE_BOOKINFO, BOOKINFO } from './Query';\nimport EditForm from \"./EditBookinfo\";\n\nfunction Books() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BOOKINFO);\n  const [deleteBookinfo] = useMutation(DELETE_BOOKINFO, {\n    refetchQueries: [{\n      query: BOOKINFO\n    }]\n  });\n\n  const deleteInfo = id => {\n    deleteBookinfo({\n      variables: {\n        id\n      }\n    });\n  };\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, data.bookinfos.map(book => /*#__PURE__*/React.createElement(\"li\", {\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"\\u3000\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, book.id), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, book.author), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteInfo(book.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Delete\"))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/n/my-app/src/t.js"],"names":["React","useQuery","useMutation","from","DELETE_BOOKINFO","BOOKINFO","EditForm","Books","loading","error","data","deleteBookinfo","refetchQueries","query","deleteInfo","id","variables","bookinfos","map","book","title","author"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,IAAhC,QAA4C,gBAA5C;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,SAA1C;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAGA,SAASC,KAAT,GAAkB;AACd,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACI,QAAD,CAAzC;AAEA,QAAM,CAAEM,cAAF,IAAqBT,WAAW,CAACE,eAAD,EAAkB;AACpDQ,IAAAA,cAAc,EAAE,CAAE;AAAEC,MAAAA,KAAK,EAAER;AAAT,KAAF;AADoC,GAAlB,CAAtC;;AAKA,QAAMS,UAAU,GAAIC,EAAD,IAAQ;AACvBJ,IAAAA,cAAc,CAAC;AAAEK,MAAAA,SAAS,EAAE;AAAED,QAAAA;AAAF;AAAb,KAAD,CAAd;AACH,GAFD;;AAKA,MAAIP,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEP,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBC,IAAI,iBACtB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,IAAI,CAACJ,EAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAII,IAAI,CAACC,KAAT,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,MAAT,CAHJ,eAII;AAAQ,IAAA,OAAO,EAAE,MAAMP,UAAU,CAACK,IAAI,CAACJ,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADD,CADH,CADJ;AAYL;;AAEH,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport { useQuery, useMutation, from } from '@apollo/client';\nimport { DELETE_BOOKINFO, BOOKINFO } from './Query'\nimport EditForm from \"./EditBookinfo\";\n\n\nfunction Books () {\n    const { loading, error, data } = useQuery(BOOKINFO);\n   \n    const [ deleteBookinfo ] = useMutation(DELETE_BOOKINFO, {\n        refetchQueries: [ { query: BOOKINFO } ]\n    })\n\n\n    const deleteInfo = (id) => {\n        deleteBookinfo({ variables: { id } })\n    }\n\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n        return (\n            <div>\n              {data.bookinfos.map(book => (\n                < li key={book.id}>ã€€\n                    <p>{book.id}</p>\n                    <p>{book.title}</p>\n                    <p>{book.author}</p>\n                    <button onClick={() => deleteInfo(book.id)} >Delete</button>\n                </li>\n              ))}\n            </div>\n          );\n  }\n\nexport default Books;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}