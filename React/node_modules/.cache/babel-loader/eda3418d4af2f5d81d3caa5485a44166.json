{"ast":null,"code":"import { gql } from \"@apollo/client\"; ////////// BOOKINFO //////////\n// ALLBOOKINFO //\n\nexport const BOOKINFO = gql`\n  {\n    bookinfos {\n      id\n      title\n      author\n      publisher\n    }\n  }\n`; // CREATE NEW BOOKINFO //\n\nexport const CREATE_BOOKINFO = gql`\n  mutation CreateBookinfo(\n    $title: String!\n    $author: String!\n    $publisher: String!\n  ) {\n    createBookinfo(\n      input: { title: $title, author: $author, publisher: $publisher }\n    ) {\n      bookinfo {\n        id\n        title\n        author\n        publisher\n      }\n    }\n  }\n`; // EDIT BOOKINFO //\n\nexport const EDIT_BOOKINFO = gql`\n  mutation UpdateBookinfo(\n    $id: ID!\n    $title: String!\n    $author: String!\n    $publisher: String!\n  ) {\n    updateBookinfo(\n      input: { id: $id, title: $title, author: $author, publisher: $publisher }\n    ) {\n      bookinfo {\n        id\n        title\n        author\n        publisher\n      }\n    }\n  }\n`; // DELETE BOOKINFO //\n\nexport const DELETE_BOOKINFO = gql`\n  mutation DeleteBookinfo($id: ID!) {\n    deleteBookinfo(input: { id: $id }) {\n      bookinfo {\n        id\n        title\n        author\n        publisher\n      }\n    }\n  }\n`; ////////// TASK //////////\n// ALL TASKS //\n\nexport const TASK = gql`\n  {\n    tasks {\n      id\n      task\n      limit\n    }\n  }\n`; // PART TASK //\n\nexport const PART_TASK = gql`\n  {\n    task(id: 14) {\n      id\n      completed\n    }\n  }\n`; // CREATE NEW TASK //\n\nexport const CREATE_TASK = gql`\n  mutation CreateTask($task: String!, $limit: ISO8601Date) {\n    createTask(input: { task: $task, limit: $limit }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`; // EDIT TASK //\n\nexport const EDIT_TASK = gql`\n  mutation UpdateTask($id: ID!, $task: String!, $limit: ISO8601Date) {\n    updateBookinfo(input: { id: $id, task: $task, limit: $limit }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`; // EDIT TASK_COMPLETED //\n\nexport const EDIT_TASK_COMPLETED = gql`\n  mutation UpdateTaskCompleted($id: ID!, $completed: Boolean) {\n    updateTaskCompleted(input: { id: $id, completed: $completed }) {\n      task {\n        id\n        completed\n      }\n    }\n  }\n`; // DELETE TASK //\n\nexport const DELETE_TASK = gql`\n  mutation DeleteTask($id: ID!) {\n    deleteTask(input: { id: $id }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`;\n/*\n////////// TASK //////////\n// ALL TASKS //\nexport const TASK = gql`\n  {\n    tasks {\n      id\n      task\n      limit\n      completed\n    }\n  }\n`;\n\n// PART TASK //\nexport const PART_TASK = gql`\n  {\n    task(id: 14) {\n      id\n      completed\n    }\n  }\n`;\n\n// CREATE NEW TASK //\nexport const CREATE_TASK = gql`\n  mutation CreateTask(\n    $task: String!\n    $limit: ISO8601Date\n    $completed: Boolean\n  ) {\n    createTask(input: { task: $task, limit: $limit, completed: $completed }) {\n      task {\n        id\n        task\n        limit\n        completed\n      }\n    }\n  }\n`;\n\n// EDIT TASK //\nexport const EDIT_TASK = gql`\n  mutation UpdateTask($id: ID!, $task: String!, $limit: ISO8601Date) {\n    updateBookinfo(input: { id: $id, task: $task, limit: $limit }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`;\n\n// EDIT TASK_COMPLETED //\nexport const EDIT_TASK_COMPLETED = gql`\n  mutation UpdateTaskCompleted($id: ID!, $completed: Boolean) {\n    updateTaskCompleted(input: { id: $id, completed: $completed }) {\n      task {\n        id\n        completed\n      }\n    }\n  }\n`;\n\n// DELETE TASK //\nexport const DELETE_TASK = gql`\n  mutation DeleteTask($id: ID!) {\n    deleteTask(input: { id: $id }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`;\n*/","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Query.js"],"names":["gql","BOOKINFO","CREATE_BOOKINFO","EDIT_BOOKINFO","DELETE_BOOKINFO","TASK","PART_TASK","CREATE_TASK","EDIT_TASK","EDIT_TASK_COMPLETED","DELETE_TASK"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB,C,CAEA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAGD,GAAI;;;;;;;;;CAArB,C,CAUP;;AACA,OAAO,MAAME,eAAe,GAAGF,GAAI;;;;;;;;;;;;;;;;;CAA5B,C,CAmBP;;AACA,OAAO,MAAMG,aAAa,GAAGH,GAAI;;;;;;;;;;;;;;;;;;CAA1B,C,CAmBP;;AACA,OAAO,MAAMI,eAAe,GAAGJ,GAAI;;;;;;;;;;;CAA5B,C,CAaP;AACA;;AACA,OAAO,MAAMK,IAAI,GAAGL,GAAI;;;;;;;;CAAjB,C,CAUP;;AACA,OAAO,MAAMM,SAAS,GAAGN,GAAI;;;;;;;CAAtB,C,CASP;;AACA,OAAO,MAAMO,WAAW,GAAGP,GAAI;;;;;;;;;;CAAxB,C,CAYP;;AACA,OAAO,MAAMQ,SAAS,GAAGR,GAAI;;;;;;;;;;CAAtB,C,CAYP;;AACA,OAAO,MAAMS,mBAAmB,GAAGT,GAAI;;;;;;;;;CAAhC,C,CAWP;;AACA,OAAO,MAAMU,WAAW,GAAGV,GAAI;;;;;;;;;;CAAxB;AAYP","sourcesContent":["import { gql } from \"@apollo/client\";\n\n////////// BOOKINFO //////////\n// ALLBOOKINFO //\nexport const BOOKINFO = gql`\n  {\n    bookinfos {\n      id\n      title\n      author\n      publisher\n    }\n  }\n`;\n// CREATE NEW BOOKINFO //\nexport const CREATE_BOOKINFO = gql`\n  mutation CreateBookinfo(\n    $title: String!\n    $author: String!\n    $publisher: String!\n  ) {\n    createBookinfo(\n      input: { title: $title, author: $author, publisher: $publisher }\n    ) {\n      bookinfo {\n        id\n        title\n        author\n        publisher\n      }\n    }\n  }\n`;\n\n// EDIT BOOKINFO //\nexport const EDIT_BOOKINFO = gql`\n  mutation UpdateBookinfo(\n    $id: ID!\n    $title: String!\n    $author: String!\n    $publisher: String!\n  ) {\n    updateBookinfo(\n      input: { id: $id, title: $title, author: $author, publisher: $publisher }\n    ) {\n      bookinfo {\n        id\n        title\n        author\n        publisher\n      }\n    }\n  }\n`;\n// DELETE BOOKINFO //\nexport const DELETE_BOOKINFO = gql`\n  mutation DeleteBookinfo($id: ID!) {\n    deleteBookinfo(input: { id: $id }) {\n      bookinfo {\n        id\n        title\n        author\n        publisher\n      }\n    }\n  }\n`;\n\n////////// TASK //////////\n// ALL TASKS //\nexport const TASK = gql`\n  {\n    tasks {\n      id\n      task\n      limit\n    }\n  }\n`;\n\n// PART TASK //\nexport const PART_TASK = gql`\n  {\n    task(id: 14) {\n      id\n      completed\n    }\n  }\n`;\n\n// CREATE NEW TASK //\nexport const CREATE_TASK = gql`\n  mutation CreateTask($task: String!, $limit: ISO8601Date) {\n    createTask(input: { task: $task, limit: $limit }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`;\n\n// EDIT TASK //\nexport const EDIT_TASK = gql`\n  mutation UpdateTask($id: ID!, $task: String!, $limit: ISO8601Date) {\n    updateBookinfo(input: { id: $id, task: $task, limit: $limit }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`;\n\n// EDIT TASK_COMPLETED //\nexport const EDIT_TASK_COMPLETED = gql`\n  mutation UpdateTaskCompleted($id: ID!, $completed: Boolean) {\n    updateTaskCompleted(input: { id: $id, completed: $completed }) {\n      task {\n        id\n        completed\n      }\n    }\n  }\n`;\n\n// DELETE TASK //\nexport const DELETE_TASK = gql`\n  mutation DeleteTask($id: ID!) {\n    deleteTask(input: { id: $id }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`;\n\n/*\n////////// TASK //////////\n// ALL TASKS //\nexport const TASK = gql`\n  {\n    tasks {\n      id\n      task\n      limit\n      completed\n    }\n  }\n`;\n\n// PART TASK //\nexport const PART_TASK = gql`\n  {\n    task(id: 14) {\n      id\n      completed\n    }\n  }\n`;\n\n// CREATE NEW TASK //\nexport const CREATE_TASK = gql`\n  mutation CreateTask(\n    $task: String!\n    $limit: ISO8601Date\n    $completed: Boolean\n  ) {\n    createTask(input: { task: $task, limit: $limit, completed: $completed }) {\n      task {\n        id\n        task\n        limit\n        completed\n      }\n    }\n  }\n`;\n\n// EDIT TASK //\nexport const EDIT_TASK = gql`\n  mutation UpdateTask($id: ID!, $task: String!, $limit: ISO8601Date) {\n    updateBookinfo(input: { id: $id, task: $task, limit: $limit }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`;\n\n// EDIT TASK_COMPLETED //\nexport const EDIT_TASK_COMPLETED = gql`\n  mutation UpdateTaskCompleted($id: ID!, $completed: Boolean) {\n    updateTaskCompleted(input: { id: $id, completed: $completed }) {\n      task {\n        id\n        completed\n      }\n    }\n  }\n`;\n\n// DELETE TASK //\nexport const DELETE_TASK = gql`\n  mutation DeleteTask($id: ID!) {\n    deleteTask(input: { id: $id }) {\n      task {\n        id\n        task\n        limit\n      }\n    }\n  }\n`;\n*/\n"]},"metadata":{},"sourceType":"module"}