{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Todolist.js\";\nimport React from \"react\";\nimport { Grommet, Box, List } from \"grommet\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { TASK } from \"./Query\";\n\nconst TodoList = () => {\n  const data = useQuery(TASK);\n  console.log(data); //if (date.loading) {\n  //  return <div>loading...</div>;\n  //}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }, data.tasks.map(p => p.task).join(\", \"), \",\");\n};\n/*\nfunction TodoList() {\n  const { loading, error, data } = useQuery(TASK);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Grommet>\n      <Box align=\"center\" pad=\"large\">\n        <List data={data} />\n      </Box>\n    </Grommet>\n  );\n}\n*/\n\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Todolist.js"],"names":["React","Grommet","Box","List","gql","useQuery","TASK","TodoList","data","console","log","tasks","map","p","task","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,GAAlB,EAAuBC,IAAvB,QAAmC,SAAnC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,QAAqB,SAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,IAAI,GAAGH,QAAQ,CAACC,IAAD,CAArB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAFqB,CAIrB;AACA;AACA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAgBC,CAAD,IAAOA,CAAC,CAACC,IAAxB,EAA8BC,IAA9B,CAAmC,IAAnC,CAAN,MAAP;AACD,CATD;AAWA;;;;;;;;;;;;;;;;;AAeA,eAAeR,QAAf","sourcesContent":["import React from \"react\";\nimport { Grommet, Box, List } from \"grommet\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { TASK } from \"./Query\";\n\nconst TodoList = () => {\n  const data = useQuery(TASK);\n  console.log(data);\n\n  //if (date.loading) {\n  //  return <div>loading...</div>;\n  //}\n\n  return <div>{data.tasks.map((p) => p.task).join(\", \")},</div>;\n};\n\n/*\nfunction TodoList() {\n  const { loading, error, data } = useQuery(TASK);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <Grommet>\n      <Box align=\"center\" pad=\"large\">\n        <List data={data} />\n      </Box>\n    </Grommet>\n  );\n}\n*/\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}