{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/EditBookinfo.js\";\nimport React, { useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nconst EDIT_BOOKINFO = gql`\n    mutation UpdateBookinfo($id: ID!, $title: String!, $author: String!){\n      updateBookinfo(\n        input:{\n          id: $id\n          title: $title\n          author: $author\n        }){\n        bookinfo {\n          id\n          title\n          author\n        }\n      }\n    }\n  `; /////\n\nconst BOOKINFO = gql`\n  {\n    bookinfos {\n      id\n      title \n      author\n    }\n  }\n`; /////\n\nconst EditForm = () => {\n  const [id, setId] = useState('');\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [updateBookinfo] = useMutation(EDIT_BOOKINFO, {\n    refetchQueries: [{\n      query: BOOKINFO\n    }]\n  });\n\n  const submit = async event => {\n    event.preventDefault();\n    updateBookinfo({\n      variables: {\n        id,\n        title,\n        author\n      }\n    });\n    setId('');\n    setTitle('');\n    setAuthor('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"edit bookinfo \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"id \", /*#__PURE__*/React.createElement(\"input\", {\n    value: id,\n    onChange: ({\n      target\n    }) => setId(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"title \", /*#__PURE__*/React.createElement(\"input\", {\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"author \", /*#__PURE__*/React.createElement(\"input\", {\n    value: author,\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"edit\")));\n};\n\nexport default EditForm;","map":{"version":3,"sources":["/Users/n/my-app/src/EditBookinfo.js"],"names":["React","useState","gql","useMutation","EDIT_BOOKINFO","BOOKINFO","EditForm","id","setId","title","setTitle","author","setAuthor","updateBookinfo","refetchQueries","query","submit","event","preventDefault","variables","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;AAGI,MAAMC,aAAa,GAAGF,GAAK;;;;;;;;;;;;;;;GAA3B,C,CAgBJ;;AACA,MAAMG,QAAQ,GAAGH,GAAI;;;;;;;;CAArB,C,CASA;;AAEE,MAAMI,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcP,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAM,CAAEY,cAAF,IAAqBV,WAAW,CAACC,aAAD,EAAgB;AAClDU,IAAAA,cAAc,EAAE,CAAE;AAAEC,MAAAA,KAAK,EAAEV;AAAT,KAAF;AADkC,GAAhB,CAAtC;;AAIA,QAAMW,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEAL,IAAAA,cAAc,CAAC;AAAEM,MAAAA,SAAS,EAAE;AAAEZ,QAAAA,EAAF;AAAME,QAAAA,KAAN;AAAaE,QAAAA;AAAb;AAAb,KAAD,CAAd;AAEAH,IAAAA,KAAK,CAAC,EAAD,CAAL;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GARD;;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAGE;AAAM,IAAA,QAAQ,EAAEI,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACO;AACD,IAAA,KAAK,EAAET,EADN;AAED,IAAA,QAAQ,EAAE,CAAC;AAAEa,MAAAA;AAAF,KAAD,KAAgBZ,KAAK,CAACY,MAAM,CAACC,KAAR,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,CADA,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACQ;AACJ,IAAA,KAAK,EAAEZ,KADH;AAEJ,IAAA,QAAQ,EAAE,CAAC;AAAEW,MAAAA;AAAF,KAAD,KAAgBV,QAAQ,CAACU,MAAM,CAACC,KAAR,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CAPF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACS;AACL,IAAA,KAAK,EAAEV,MADF;AAEL,IAAA,QAAQ,EAAE,CAAC;AAAES,MAAAA;AAAF,KAAD,KAAgBR,SAAS,CAACQ,MAAM,CAACC,KAAR,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,CAbF,eAmBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,CAHF,CADF;AA2BD,CA9CD;;AAgDA,eAAef,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { gql, useMutation } from '@apollo/client';\n\n\n    const EDIT_BOOKINFO = gql `\n    mutation UpdateBookinfo($id: ID!, $title: String!, $author: String!){\n      updateBookinfo(\n        input:{\n          id: $id\n          title: $title\n          author: $author\n        }){\n        bookinfo {\n          id\n          title\n          author\n        }\n      }\n    }\n  `\n/////\nconst BOOKINFO = gql`\n  {\n    bookinfos {\n      id\n      title \n      author\n    }\n  }\n`\n/////\n\n  const EditForm = () => {\n    const [id, setId] = useState('')\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n  \n    const [ updateBookinfo ] = useMutation(EDIT_BOOKINFO, {\n        refetchQueries: [ { query: BOOKINFO } ]\n    })\n\n    const submit = async (event) => {\n      event.preventDefault()\n  \n      updateBookinfo({ variables: { id, title, author } })\n  \n      setId('')\n      setTitle('')\n      setAuthor('')\n    }\n  \n    return (\n      <div>\n        <h2>edit bookinfo </h2>\n  \n        <form onSubmit={submit}>\n        <div>\n            id <input\n              value={id}\n              onChange={({ target }) => setId(target.value)}\n            />\n          </div>\n          <div>\n            title <input\n              value={title}\n              onChange={({ target }) => setTitle(target.value)}\n            />\n          </div>\n          <div>\n            author <input\n              value={author}\n              onChange={({ target }) => setAuthor(target.value)}\n            />\n          </div>\n          <button type='submit'>edit</button>\n        </form>\n      </div>\n    )\n  }\n  \n  export default EditForm"]},"metadata":{},"sourceType":"module"}