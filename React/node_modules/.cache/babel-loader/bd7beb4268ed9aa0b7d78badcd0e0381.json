{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/EditBookinfo.js\";\nimport React, { useState, useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { EDIT_BOOKINFO, BOOKINFO } from './Query';\nimport { BookInfos } from './Bookinfos';\nimport { Box, Button, Grommet, Form, FormField, Text, TextInput } from \"grommet\";\n\nfunction EditForm() {\n  const book = useContext(BookInfos);\n  const [id, setId] = useState(book.id);\n  const [title, setTitle] = useState(book.title);\n  const [author, setAuthor] = useState(book.author);\n  const [updateBookinfo] = useMutation(EDIT_BOOKINFO, {\n    refetchQueries: [{\n      query: BOOKINFO\n    }]\n  }); //const submit = async (event) => {\n\n  const send = () => {\n    //event.preventDefault();\n    setId(book.id);\n    updateBookinfo({\n      variables: {\n        id,\n        title,\n        author\n      }\n    });\n    setId('');\n    setTitle('');\n    setAuthor(''); //props.setEdit(true)\n  };\n  /*\n   const Click = () => {\n    props.setEdit(true)\n  }\n  */\n\n\n  return /*#__PURE__*/React.createElement(Grommet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fill: true,\n    align: \"center\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"medium\",\n    margin: {\n      \"bottom\": \"medium\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: ({\n      value: nextValue\n    }) => send(nextValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    label: \"Title\",\n    name: \"title\",\n    margin: (\"small\", {\n      \"bottom\": \"small\"\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"title\",\n    type: \"title\",\n    value: title,\n    onChange: ({\n      target\n    }) => setTitle(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormField, {\n    label: \"Author\",\n    name: \"author\",\n    margin: (\"small\", {\n      \"bottom\": \"small\"\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    name: \"author\",\n    type: \"author\",\n    value: author,\n    onChange: ({\n      target\n    }) => setAuthor(target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    direction: \"row\",\n    justify: \"between\",\n    margin: {\n      top: \"small\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    type: \"submit\",\n    label: \"Edit\",\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }))))));\n}\n\nexport default EditForm;\n/*\nreturn (<div>\n    <form onSubmit={() => {send()}}>\n      <div>\n        title <input value={title} onChange={({ target }) => setTitle(target.value)} />\n      </div>\n      <div>\n        author <input value={author} onChange={({ target }) => setAuthor(target.value)} />\n      </div>\n      <button type='submit'>Edit!!</button>\n    </form>\n  </div>);\n  */","map":{"version":3,"sources":["/Users/n/my-app/src/Components/EditBookinfo.js"],"names":["React","useState","useContext","useMutation","EDIT_BOOKINFO","BOOKINFO","BookInfos","Box","Button","Grommet","Form","FormField","Text","TextInput","EditForm","book","id","setId","title","setTitle","author","setAuthor","updateBookinfo","refetchQueries","query","send","variables","value","nextValue","target","top"],"mappings":"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","sourcesContent":["import React, { useState,useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { EDIT_BOOKINFO, BOOKINFO } from './Query';\n\nimport { BookInfos } from './Bookinfos'\n\n\nimport {\n  Box,\n  Button,\n  Grommet,\n  Form,\n  FormField,\n  Text,\n  TextInput\n} from \"grommet\";\n\n\nfunction EditForm() {\n  const book = useContext(BookInfos)\n  const [id, setId] = useState(book.id);\n  const [title, setTitle] = useState(book.title);\n  const [author, setAuthor] = useState(book.author);\n  const [updateBookinfo] = useMutation(EDIT_BOOKINFO, {\n    refetchQueries: [{ query: BOOKINFO }]\n  });\n\n  //const submit = async (event) => {\n  const send = () => {\n    //event.preventDefault();\n    setId(book.id)\n    updateBookinfo({ variables: { id, title, author } });\n    setId('');\n    setTitle('');\n    setAuthor('');\n    //props.setEdit(true)\n  };\n  \n  /*\n   const Click = () => {\n    props.setEdit(true)\n  }\n  */\n\n  return ( <Grommet >\n    <Box fill align=\"center\" justify=\"center\" >\n      <Box width=\"medium\" margin={{\"bottom\":\"medium\"}}>\n        <Form \n          onSubmit={({ value: nextValue }) => send(nextValue)}>\n          <FormField label=\"Title\" name=\"title\"  margin={\"small\",{\"bottom\":\"small\",}} required>\n            <TextInput name=\"title\" type=\"title\" value={title}\n            onChange={({ target }) => setTitle(target.value)}/>\n          </FormField>\n\n          <FormField label=\"Author\" name=\"author\" margin={\"small\",{\"bottom\":\"small\"}} required>\n            <TextInput  name=\"author\" type=\"author\" value={author}\n            onChange={({ target }) => setAuthor(target.value)}/>\n          </FormField>\n\n          <Box direction=\"row\" justify=\"between\" margin={{ top: \"small\" }}>\n           \n            <Button size=\"small\" type=\"submit\" label=\"Edit\" primary />\n          </Box>\n        </Form>\n      </Box>\n    </Box>\n  </Grommet>);\n\n  }\nexport default EditForm\n\n/*\nreturn (<div>\n    <form onSubmit={() => {send()}}>\n      <div>\n        title <input value={title} onChange={({ target }) => setTitle(target.value)} />\n      </div>\n      <div>\n        author <input value={author} onChange={({ target }) => setAuthor(target.value)} />\n      </div>\n      <button type='submit'>Edit!!</button>\n    </form>\n  </div>);\n  */"]},"metadata":{},"sourceType":"module"}