{"ast":null,"code":"import React, { useState } from 'react'; // When not a descendant of a Form, FormContext still provides a basic\n// useFormContext. It doesn't do anything for components like TextInput.\n// But, it does store the value for components like CheckBox or Select\n// where the grommet component needs to know the value in order to\n// render custom visuals.\n\nvar useFormContext = function useFormContext(_, valueProp, initialValue) {\n  var _useState = useState(valueProp !== undefined ? valueProp : initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  return [valueProp !== undefined ? valueProp : value, function (nextValue) {\n    if (initialValue !== undefined) setValue(nextValue);\n  }];\n};\n\nexport var FormContext = React.createContext({\n  useFormContext: useFormContext\n});","map":{"version":3,"sources":["/Users/n/my-app/node_modules/grommet/es6/components/Form/FormContext.js"],"names":["React","useState","useFormContext","_","valueProp","initialValue","_useState","undefined","value","setValue","nextValue","FormContext","createContext"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAAyC;AACzC;AACA;AACA;AACA;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,CAAxB,EAA2BC,SAA3B,EAAsCC,YAAtC,EAAoD;AACvE,MAAIC,SAAS,GAAGL,QAAQ,CAACG,SAAS,KAAKG,SAAd,GAA0BH,SAA1B,GAAsCC,YAAvC,CAAxB;AAAA,MACIG,KAAK,GAAGF,SAAS,CAAC,CAAD,CADrB;AAAA,MAEIG,QAAQ,GAAGH,SAAS,CAAC,CAAD,CAFxB;;AAIA,SAAO,CAACF,SAAS,KAAKG,SAAd,GAA0BH,SAA1B,GAAsCI,KAAvC,EAA8C,UAAUE,SAAV,EAAqB;AACxE,QAAIL,YAAY,KAAKE,SAArB,EAAgCE,QAAQ,CAACC,SAAD,CAAR;AACjC,GAFM,CAAP;AAGD,CARD;;AAUA,OAAO,IAAIC,WAAW,GAAGX,KAAK,CAACY,aAAN,CAAoB;AAC3CV,EAAAA,cAAc,EAAEA;AAD2B,CAApB,CAAlB","sourcesContent":["import React, { useState } from 'react'; // When not a descendant of a Form, FormContext still provides a basic\n// useFormContext. It doesn't do anything for components like TextInput.\n// But, it does store the value for components like CheckBox or Select\n// where the grommet component needs to know the value in order to\n// render custom visuals.\n\nvar useFormContext = function useFormContext(_, valueProp, initialValue) {\n  var _useState = useState(valueProp !== undefined ? valueProp : initialValue),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  return [valueProp !== undefined ? valueProp : value, function (nextValue) {\n    if (initialValue !== undefined) setValue(nextValue);\n  }];\n};\n\nexport var FormContext = React.createContext({\n  useFormContext: useFormContext\n});"]},"metadata":{},"sourceType":"module"}