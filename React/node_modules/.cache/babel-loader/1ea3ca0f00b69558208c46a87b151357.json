{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/t.js\";\nimport React, { useState } from 'react';\nimport { useQuery, gql, useMutation } from '@apollo/client'; // ALLBOOKINFO //\n\nexport const BOOKINFO = gql`\n{\nbookinfos {\n  id\n  title \n  author\n}\n}\n`; // DELETE BOOKINFO //\n\nexport const DELETE_BOOKINFO = gql`\nmutation DeleteBookinfo($id: ID!){\n  deleteBookinfo(\n    input:{\n      id: $id\n    }){\n    bookinfo {\n      id\n      title\n      author\n    }\n  }\n}\n`; /////\n\nfunction Books() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(BOOKINFO);\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n\n  const DeleteInfo = () => {\n    const [id, setId] = useState('');\n    const [deleteBookinfo] = useMutation(DELETE_BOOKINFO);\n    deleteBookinfo({\n      variables: {\n        id\n      }\n    });\n    setId('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, data.bookinfos.map(book => /*#__PURE__*/React.createElement(\"li\", {\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"\\u3000\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, book.id), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, book.author), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => DeleteInfo(book.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Delete\"))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/n/my-app/src/t.js"],"names":["React","useState","useQuery","gql","useMutation","BOOKINFO","DELETE_BOOKINFO","Books","loading","error","data","DeleteInfo","id","setId","deleteBookinfo","variables","bookinfos","map","book","title","author"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,WAAxB,QAA6C,gBAA7C,C,CAGA;;AACA,OAAO,MAAMC,QAAQ,GAAGF,GAAI;;;;;;;;CAArB,C,CASP;;AACA,OAAO,MAAMG,eAAe,GAAGH,GAAK;;;;;;;;;;;;;CAA7B,C,CAcP;;AAIA,SAASI,KAAT,GAAkB;AACd,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BR,QAAQ,CAACG,QAAD,CAAzC;AAEA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;;AAEP,QAAME,UAAU,GAAG,MAAM;AACrB,UAAM,CAACC,EAAD,EAAKC,KAAL,IAAcZ,QAAQ,CAAC,EAAD,CAA5B;AAEA,UAAM,CAAEa,cAAF,IAAqBV,WAAW,CAACE,eAAD,CAAtC;AAIEQ,IAAAA,cAAc,CAAC;AAAEC,MAAAA,SAAS,EAAE;AAAEH,QAAAA;AAAF;AAAb,KAAD,CAAd;AAEAC,IAAAA,KAAK,CAAC,EAAD,CAAL;AACL,GAVD;;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACM,SAAL,CAAeC,GAAf,CAAmBC,IAAI,iBACtB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACN,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIM,IAAI,CAACN,EAAT,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIM,IAAI,CAACC,KAAT,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,MAAT,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMT,UAAU,CAACO,IAAI,CAACN,EAAN,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADD,CADH,CADJ;AAaL;;AAEH,eAAeL,KAAf","sourcesContent":["import React , { useState } from 'react';\nimport { useQuery, gql, useMutation,  } from '@apollo/client';\n\n\n// ALLBOOKINFO //\nexport const BOOKINFO = gql`\n{\nbookinfos {\n  id\n  title \n  author\n}\n}\n`\n// DELETE BOOKINFO //\nexport const DELETE_BOOKINFO = gql `\nmutation DeleteBookinfo($id: ID!){\n  deleteBookinfo(\n    input:{\n      id: $id\n    }){\n    bookinfo {\n      id\n      title\n      author\n    }\n  }\n}\n`\n/////\n\n\n\nfunction Books () {\n    const { loading, error, data } = useQuery(BOOKINFO);\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n        const DeleteInfo = () => {\n            const [id, setId] = useState('')\n            \n            const [ deleteBookinfo ] = useMutation(DELETE_BOOKINFO)\n        \n            \n          \n              deleteBookinfo({ variables: { id } })\n          \n              setId('')\n        }\n          \n  \n        return (\n            <div>\n              {data.bookinfos.map(book => (\n                <li key={book.id}>ã€€\n                    <p>{book.id}</p>\n                    <p>{book.title}</p>\n                    <p>{book.author}</p>\n                    <button>Edit</button>\n                    <button type='submit' onClick={() => DeleteInfo(book.id)} >Delete</button>\n                </li>\n              ))}\n            </div>\n          );\n  }\n\nexport default Books;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}