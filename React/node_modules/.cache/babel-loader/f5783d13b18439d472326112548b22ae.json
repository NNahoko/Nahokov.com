{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Grom_Test.js\";\nimport React, { useState } from \"react\";\nimport { Grommet, Box, Button, Grid, Text, Avatar } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\nimport { Favorite } from \"grommet-icons\";\nimport MyBookinfo from './Components/Test_dash';\n\nconst AppGrid = () => {\n  const [sidebar, setSidebar] = useState(true);\n  return /*#__PURE__*/React.createElement(Grommet, {\n    full: true,\n    theme: grommet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    fill: true,\n    rows: [\"auto\", \"flex\"],\n    columns: [\"auto\", \"flex\"],\n    areas: [{\n      name: \"header\",\n      start: [0, 0],\n      end: [1, 0]\n    }, {\n      name: \"sidebar\",\n      start: [0, 1],\n      end: [0, 1]\n    }, {\n      name: \"main\",\n      start: [1, 1],\n      end: [1, 1]\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    gridArea: \"header\",\n    direction: \"row\",\n    align: \"center\",\n    justify: \"between\",\n    pad: {\n      horizontal: \"medium\",\n      vertical: \"small\"\n    },\n    background: \"#00739D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setSidebar(!sidebar),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Nahokov Web\")), /*#__PURE__*/React.createElement(Avatar, {\n    background: \"light-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Favorite, {\n    color: \"accent-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))), sidebar && /*#__PURE__*/React.createElement(Box, {\n    gridArea: \"sidebar\",\n    background: \"dark-3\",\n    width: \"small\",\n    animation: [{\n      type: \"fadeIn\",\n      duration: 300\n    }, {\n      type: \"slideRight\",\n      size: \"xlarge\",\n      duration: 150\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, [\"First\", \"Second\", \"Third\"].map(name => /*#__PURE__*/React.createElement(Button, {\n    key: name,\n    href: MyBookinfo,\n    hoverIndicator: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    pad: {\n      horizontal: \"medium\",\n      vertical: \"small\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, name))))), /*#__PURE__*/React.createElement(Box, {\n    gridArea: \"main\",\n    justify: \"center\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default AppGrid;","map":{"version":3,"sources":["/Users/n/my-app/src/Grom_Test.js"],"names":["React","useState","Grommet","Box","Button","Grid","Text","Avatar","grommet","Favorite","MyBookinfo","AppGrid","sidebar","setSidebar","name","start","end","horizontal","vertical","type","duration","size","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grommet, Box, Button, Grid, Text, Avatar } from \"grommet\";\nimport { grommet } from \"grommet/themes\";\nimport { Favorite } from \"grommet-icons\";\n\nimport MyBookinfo from './Components/Test_dash'\n\n\nconst AppGrid = () => {\n  const [sidebar, setSidebar] = useState(true);\n\n  return (\n    <Grommet full theme={grommet}>\n      <Grid\n        fill\n        rows={[\"auto\", \"flex\"]}\n        columns={[\"auto\", \"flex\"]}\n        areas={[\n          { name: \"header\", start: [0, 0], end: [1, 0] },\n          { name: \"sidebar\", start: [0, 1], end: [0, 1] },\n          { name: \"main\", start: [1, 1], end: [1, 1] }\n        ]}\n      >\n        <Box\n          gridArea=\"header\"\n          direction=\"row\"\n          align=\"center\"\n          justify=\"between\"\n          pad={{ horizontal: \"medium\", vertical: \"small\" }}\n          background=\"#00739D\"\n        >\n          <Button onClick={() => setSidebar(!sidebar)}>\n            <Text size=\"large\">Nahokov Web</Text>\n          </Button>\n          <Avatar background=\"light-2\">\n          <Favorite color=\"accent-3\" />\n        </Avatar>\n        </Box>\n        {sidebar && (\n          <Box\n            gridArea=\"sidebar\"\n            background=\"dark-3\"\n            width=\"small\"\n            animation={[\n              { type: \"fadeIn\", duration: 300 },\n              { type: \"slideRight\", size: \"xlarge\", duration: 150 }\n            ]}\n          >\n            {[\"First\", \"Second\", \"Third\"].map(name => (\n              <Button key={name} href={MyBookinfo} hoverIndicator>\n                <Box pad={{ horizontal: \"medium\", vertical: \"small\" }}>\n                  <Text>{name}</Text>\n                </Box>\n              </Button>\n            ))}\n          </Box>\n        )}\n        <Box gridArea=\"main\" justify=\"center\" align=\"center\">\n         \n         </Box>\n      </Grid>\n    </Grommet>\n  );\n};\nexport default AppGrid"]},"metadata":{},"sourceType":"module"}