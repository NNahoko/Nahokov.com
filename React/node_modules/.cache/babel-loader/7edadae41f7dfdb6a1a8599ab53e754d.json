{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/Components/Todo_test.js\";\nimport React, { useState } from \"react\";\nimport { Box, Grommet, CheckBox } from \"grommet\";\nimport { EDIT_TASK_COMPLETED, TASK, DELETE_TASK, PART_TASK } from \"./Query\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction Todotest() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(TASK);\n  const [checked, setChecked] = useState(true);\n  return /*#__PURE__*/React.createElement(Grommet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, data.tasks.map(task => /*#__PURE__*/React.createElement(CheckBox, {\n    key: task.id,\n    checked: checked,\n    label: task.task,\n    onChange: () => setChecked(checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Todotest;","map":{"version":3,"sources":["/Users/n/my-app/src/Components/Todo_test.js"],"names":["React","useState","Box","Grommet","CheckBox","EDIT_TASK_COMPLETED","TASK","DELETE_TASK","PART_TASK","useQuery","Todotest","loading","error","data","checked","setChecked","tasks","map","task","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,QAAuC,SAAvC;AACA,SAASC,mBAAT,EAA8BC,IAA9B,EAAoCC,WAApC,EAAiDC,SAAjD,QAAkE,SAAlE;AACA,SAASC,QAAT,QAAyB,gBAAzB;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,QAAQ,CAACH,IAAD,CAAzC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AAEA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAgBC,IAAD,iBACd,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,OAAO,EAAEL,OAFX;AAGE,IAAA,KAAK,EAAEI,IAAI,CAACA,IAHd;AAIE,IAAA,QAAQ,EAAE,MAAMH,UAAU,CAACD,OAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF;AAYD;;AAED,eAAeJ,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Grommet, CheckBox } from \"grommet\";\nimport { EDIT_TASK_COMPLETED, TASK, DELETE_TASK, PART_TASK } from \"./Query\";\nimport { useQuery } from \"@apollo/client\";\n\nfunction Todotest() {\n  const { loading, error, data } = useQuery(TASK);\n  const [checked, setChecked] = useState(true);\n\n  return (\n    <Grommet>\n      {data.tasks.map((task) => (\n        <CheckBox\n          key={task.id}\n          checked={checked}\n          label={task.task}\n          onChange={() => setChecked(checked)}\n        />\n      ))}\n    </Grommet>\n  );\n}\n\nexport default Todotest;\n"]},"metadata":{},"sourceType":"module"}