{"ast":null,"code":"var _jsxFileName = \"/Users/n/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker'; //import { ApolloProvider } from 'react-apollo';\n\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { gql } from '@apollo/client';\nconst link = createHttpLink({\n  uri: 'http://localhost:3001/graphql'\n});\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\nclient.query({\n  query: gql`\n      {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n}).then(result => console.log(result));\nReactDOM.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/n/my-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","ApolloClient","createHttpLink","InMemoryCache","gql","link","uri","client","cache","query","then","result","console","log","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CACA;;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,SAASC,GAAT,QAAoB,gBAApB;AAGA,MAAMC,IAAI,GAAGH,cAAc,CAAC;AAC1BI,EAAAA,GAAG,EAAE;AADqB,CAAD,CAA3B;AAIA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BI,EAAAA,IAAI,EAAEA,IADwB;AAE9BG,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAFuB,CAAjB,CAAf;AAOAI,MAAM,CACHE,KADH,CACS;AACLA,EAAAA,KAAK,EAAEL,GAAI;;;;;;;AADN,CADT,EAUGM,IAVH,CAUQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAVlB;AAaAb,QAAQ,CAACgB,MAAT,eACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEP,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEQ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOAhB,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n//import { ApolloProvider } from 'react-apollo';\nimport { ApolloClient } from 'apollo-client';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport { gql } from '@apollo/client'\n\n\nconst link = createHttpLink({\n  uri: 'http://localhost:3001/graphql' \n});\n\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\n\n\n\nclient\n  .query({\n    query: gql`\n      {\n        rates(currency: \"USD\") {\n          currency\n        }\n      }\n    `\n  })\n  .then(result => console.log(result));\n\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}